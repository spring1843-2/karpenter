apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: pre-upgrade-setup
  namespace: karpenter-tests
spec:
  description: |
    Setup a Karpenter test suite from an older version of Karpenter.
    ---
    NOTE: This differs from setup.yaml currently because the --attach-policy-arn(s)
    in the eksctl create iamserviceaccount is different and the helm upgrade in the install-karpenter
    section has different parameters
  params:
    - name: cluster-name
      description: Name of the cluster under test.
    - name: kubernetes-version
      description: Kubernetes version to deploy
      default: "1.23"
    - name: ip-family
      description: IP Family of the cluster. Valid values are IPv4 or IPv6
      default: IPv4
    - name: git-repo-url
      description: the git repo url can be used to run tests on a fork
      default: "https://github.com/aws/karpenter"
    - name: git-ref
      description: Git commit, tag, or branch to check out. Requires a corresponding Karpenter snapshot release.
  results:
    - name: account-id
    - name: region
  workspaces:
    - name: ws
  steps:
    - name: discover-environment
      image: public.ecr.aws/karpenter/tools:latest
      script: |
        TOKEN=$(curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600")
        curl -H "X-aws-ec2-metadata-token: $TOKEN" -v http://169.254.169.254/latest/meta-data/identity-credentials/ec2/info | jq -r ".AccountId" | tr -d '\n' > $(results.account-id.path)
        curl -H "X-aws-ec2-metadata-token: $TOKEN" -v http://169.254.169.254/latest/meta-data/placement/region > $(results.region.path)

    - name: checkout-repository
      image: alpine/git
      workingDir: $(workspaces.ws.path)
      script: |
        echo "Cloning $(params.git-repo-url)"
        git clone $(params.git-repo-url).git .

        echo "Fetching: $(params.git-ref)"
        git fetch origin $(params.git-ref)

        echo "Checking out git ref: $(echo $(params.git-ref) | cut -d":" -f2)"
        git checkout $(echo $(params.git-ref)| cut -d":" -f2)
    - name: create-iam-policies
      image: public.ecr.aws/karpenter/tools:latest
      workingDir: $(workspaces.ws.path)
      script: |
        aws iam create-service-linked-role --aws-service-name spot.amazonaws.com || true
        aws cloudformation deploy \
          --stack-name iam-$(params.cluster-name) \
          --template-file website/content/en/preview/getting-started/getting-started-with-eksctl/cloudformation.yaml \
          --capabilities CAPABILITY_NAMED_IAM \
          --parameter-overrides "ClusterName=$(params.cluster-name)"

    - name: create-cluster
      image: public.ecr.aws/karpenter/tools:latest
      script: |
        cmd="create"
        eksctl get cluster --name $(params.cluster-name) && cmd="upgrade"
        eksctl ${cmd} cluster -f - <<EOF
        ---
        apiVersion: eksctl.io/v1alpha5
        kind: ClusterConfig
        metadata:
          name: $(params.cluster-name)
          region: $(cat $(results.region.path))
          version: "$(params.kubernetes-version)"
          tags:
            karpenter.sh/discovery: $(params.cluster-name)
        kubernetesNetworkConfig:
          ipFamily: $(params.ip-family)
        managedNodeGroups:
          - instanceType: m5.large
            amiFamily: AmazonLinux2
            name: $(params.cluster-name)-system-pool
            desiredCapacity: 2
            minSize: 2
            maxSize: 2
            taints:
            - key: CriticalAddonsOnly
              value: "true"
              effect: NoSchedule
        iam:
          withOIDC: true
        addons:
        - name: vpc-cni
        - name: coredns
        - name: kube-proxy
        - name: aws-ebs-csi-driver
          wellKnownPolicies: 
            ebsCSIController: true
        EOF
        
        eksctl create iamidentitymapping \
        --username system:node:{{EC2PrivateDNSName}} \
        --cluster "$(params.cluster-name)" \
        --arn "arn:aws:iam::$(cat $(results.account-id.path)):role/KarpenterNodeRole-$(params.cluster-name)" \
        --group system:bootstrappers \
        --group system:nodes
        
        eksctl create iamserviceaccount \
          --cluster "$(params.cluster-name)" --name karpenter --namespace karpenter \
          --role-name "$(params.cluster-name)-karpenter" \
          --attach-policy-arn "arn:aws:iam::$(cat $(results.account-id.path)):policy/KarpenterControllerPolicy-$(params.cluster-name)" \
          --role-only \
          --approve

    - name: install-karpenter
      image: public.ecr.aws/karpenter/tools:latest
      workingDir: $(workspaces.ws.path)
      script: |
        aws eks update-kubeconfig --name $(params.cluster-name)
        helm upgrade --install --kubeconfig /root/.kube/config --namespace karpenter --create-namespace \
          karpenter oci://public.ecr.aws/karpenter/karpenter \
          --version v0-$(git rev-parse HEAD) \
          --set serviceAccount.annotations."eks\.amazonaws\.com/role-arn"="arn:aws:iam::$(cat $(results.account-id.path)):role/$(params.cluster-name)-karpenter" \
          --set settings.aws.clusterName=$(params.cluster-name) \
          --set settings.aws.clusterEndpoint=$(cat /root/.kube/config | grep server | awk '{print $2}') \
          --set settings.aws.defaultInstanceProfile=KarpenterNodeInstanceProfile-$(params.cluster-name) \
          --set settings.aws.interruptionQueueName=$(params.cluster-name) \
          --wait
